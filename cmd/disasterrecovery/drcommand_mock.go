// Code generated by mockery v2.51.0. DO NOT EDIT.

package disasterrecovery

import mock "github.com/stretchr/testify/mock"

// MockDRCommand is an autogenerated mock type for the DRCommand type
type MockDRCommand struct {
	mock.Mock
}

type MockDRCommand_Expecter struct {
	mock *mock.Mock
}

func (_m *MockDRCommand) EXPECT() *MockDRCommand_Expecter {
	return &MockDRCommand_Expecter{mock: &_m.Mock}
}

// Name provides a mock function with no fields
func (_m *MockDRCommand) Name() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Name")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockDRCommand_Name_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Name'
type MockDRCommand_Name_Call struct {
	*mock.Call
}

// Name is a helper method to define mock.On call
func (_e *MockDRCommand_Expecter) Name() *MockDRCommand_Name_Call {
	return &MockDRCommand_Name_Call{Call: _e.mock.On("Name")}
}

func (_c *MockDRCommand_Name_Call) Run(run func()) *MockDRCommand_Name_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockDRCommand_Name_Call) Return(_a0 string) *MockDRCommand_Name_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockDRCommand_Name_Call) RunAndReturn(run func() string) *MockDRCommand_Name_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockDRCommand creates a new instance of MockDRCommand. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockDRCommand(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockDRCommand {
	mock := &MockDRCommand{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
