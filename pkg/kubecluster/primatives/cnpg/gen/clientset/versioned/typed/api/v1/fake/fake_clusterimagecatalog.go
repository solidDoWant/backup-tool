// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/cloudnative-pg/cloudnative-pg/api/v1"
	apiv1 "github.com/solidDoWant/backup-tool/pkg/kubecluster/primatives/cnpg/gen/clientset/versioned/typed/api/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeClusterImageCatalogs implements ClusterImageCatalogInterface
type fakeClusterImageCatalogs struct {
	*gentype.FakeClientWithList[*v1.ClusterImageCatalog, *v1.ClusterImageCatalogList]
	Fake *FakePostgresqlV1
}

func newFakeClusterImageCatalogs(fake *FakePostgresqlV1, namespace string) apiv1.ClusterImageCatalogInterface {
	return &fakeClusterImageCatalogs{
		gentype.NewFakeClientWithList[*v1.ClusterImageCatalog, *v1.ClusterImageCatalogList](
			fake.Fake,
			namespace,
			v1.GroupVersion.WithResource("clusterimagecatalogs"),
			v1.GroupVersion.WithKind("ClusterImageCatalog"),
			func() *v1.ClusterImageCatalog { return &v1.ClusterImageCatalog{} },
			func() *v1.ClusterImageCatalogList { return &v1.ClusterImageCatalogList{} },
			func(dst, src *v1.ClusterImageCatalogList) { dst.ListMeta = src.ListMeta },
			func(list *v1.ClusterImageCatalogList) []*v1.ClusterImageCatalog {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1.ClusterImageCatalogList, items []*v1.ClusterImageCatalog) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
