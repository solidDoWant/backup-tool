// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/cert-manager/approver-policy/pkg/apis/policy/v1alpha1"
	policyv1alpha1 "github.com/solidDoWant/backup-tool/pkg/kubecluster/primatives/approverpolicy/gen/clientset/versioned/typed/policy/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeCertificateRequestPolicies implements CertificateRequestPolicyInterface
type fakeCertificateRequestPolicies struct {
	*gentype.FakeClientWithList[*v1alpha1.CertificateRequestPolicy, *v1alpha1.CertificateRequestPolicyList]
	Fake *FakePolicyV1alpha1
}

func newFakeCertificateRequestPolicies(fake *FakePolicyV1alpha1) policyv1alpha1.CertificateRequestPolicyInterface {
	return &fakeCertificateRequestPolicies{
		gentype.NewFakeClientWithList[*v1alpha1.CertificateRequestPolicy, *v1alpha1.CertificateRequestPolicyList](
			fake.Fake,
			"",
			v1alpha1.SchemeGroupVersion.WithResource("certificaterequestpolicies"),
			v1alpha1.SchemeGroupVersion.WithKind("CertificateRequestPolicy"),
			func() *v1alpha1.CertificateRequestPolicy { return &v1alpha1.CertificateRequestPolicy{} },
			func() *v1alpha1.CertificateRequestPolicyList { return &v1alpha1.CertificateRequestPolicyList{} },
			func(dst, src *v1alpha1.CertificateRequestPolicyList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.CertificateRequestPolicyList) []*v1alpha1.CertificateRequestPolicy {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1alpha1.CertificateRequestPolicyList, items []*v1alpha1.CertificateRequestPolicy) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
