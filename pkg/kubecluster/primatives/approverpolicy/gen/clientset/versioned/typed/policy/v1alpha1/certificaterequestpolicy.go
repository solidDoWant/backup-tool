// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	context "context"

	policyv1alpha1 "github.com/cert-manager/approver-policy/pkg/apis/policy/v1alpha1"
	scheme "github.com/solidDoWant/backup-tool/pkg/kubecluster/primatives/approverpolicy/gen/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// CertificateRequestPoliciesGetter has a method to return a CertificateRequestPolicyInterface.
// A group's client should implement this interface.
type CertificateRequestPoliciesGetter interface {
	CertificateRequestPolicies() CertificateRequestPolicyInterface
}

// CertificateRequestPolicyInterface has methods to work with CertificateRequestPolicy resources.
type CertificateRequestPolicyInterface interface {
	Create(ctx context.Context, certificateRequestPolicy *policyv1alpha1.CertificateRequestPolicy, opts v1.CreateOptions) (*policyv1alpha1.CertificateRequestPolicy, error)
	Update(ctx context.Context, certificateRequestPolicy *policyv1alpha1.CertificateRequestPolicy, opts v1.UpdateOptions) (*policyv1alpha1.CertificateRequestPolicy, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, certificateRequestPolicy *policyv1alpha1.CertificateRequestPolicy, opts v1.UpdateOptions) (*policyv1alpha1.CertificateRequestPolicy, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*policyv1alpha1.CertificateRequestPolicy, error)
	List(ctx context.Context, opts v1.ListOptions) (*policyv1alpha1.CertificateRequestPolicyList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *policyv1alpha1.CertificateRequestPolicy, err error)
	CertificateRequestPolicyExpansion
}

// certificateRequestPolicies implements CertificateRequestPolicyInterface
type certificateRequestPolicies struct {
	*gentype.ClientWithList[*policyv1alpha1.CertificateRequestPolicy, *policyv1alpha1.CertificateRequestPolicyList]
}

// newCertificateRequestPolicies returns a CertificateRequestPolicies
func newCertificateRequestPolicies(c *PolicyV1alpha1Client) *certificateRequestPolicies {
	return &certificateRequestPolicies{
		gentype.NewClientWithList[*policyv1alpha1.CertificateRequestPolicy, *policyv1alpha1.CertificateRequestPolicyList](
			"certificaterequestpolicies",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *policyv1alpha1.CertificateRequestPolicy { return &policyv1alpha1.CertificateRequestPolicy{} },
			func() *policyv1alpha1.CertificateRequestPolicyList {
				return &policyv1alpha1.CertificateRequestPolicyList{}
			},
		),
	}
}
