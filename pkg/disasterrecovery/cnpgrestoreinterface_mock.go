// Code generated by mockery v2.51.0. DO NOT EDIT.

package disasterrecovery

import (
	contexts "github.com/solidDoWant/backup-tool/pkg/contexts"
	kubecluster "github.com/solidDoWant/backup-tool/pkg/kubecluster"

	mock "github.com/stretchr/testify/mock"
)

// MockCNPGRestoreInterface is an autogenerated mock type for the CNPGRestoreInterface type
type MockCNPGRestoreInterface struct {
	mock.Mock
}

type MockCNPGRestoreInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockCNPGRestoreInterface) EXPECT() *MockCNPGRestoreInterface_Expecter {
	return &MockCNPGRestoreInterface_Expecter{mock: &_m.Mock}
}

// CheckResourcesReady provides a mock function with given fields: ctx
func (_m *MockCNPGRestoreInterface) CheckResourcesReady(ctx *contexts.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for CheckResourcesReady")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*contexts.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockCNPGRestoreInterface_CheckResourcesReady_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CheckResourcesReady'
type MockCNPGRestoreInterface_CheckResourcesReady_Call struct {
	*mock.Call
}

// CheckResourcesReady is a helper method to define mock.On call
//   - ctx *contexts.Context
func (_e *MockCNPGRestoreInterface_Expecter) CheckResourcesReady(ctx interface{}) *MockCNPGRestoreInterface_CheckResourcesReady_Call {
	return &MockCNPGRestoreInterface_CheckResourcesReady_Call{Call: _e.mock.On("CheckResourcesReady", ctx)}
}

func (_c *MockCNPGRestoreInterface_CheckResourcesReady_Call) Run(run func(ctx *contexts.Context)) *MockCNPGRestoreInterface_CheckResourcesReady_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*contexts.Context))
	})
	return _c
}

func (_c *MockCNPGRestoreInterface_CheckResourcesReady_Call) Return(_a0 error) *MockCNPGRestoreInterface_CheckResourcesReady_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockCNPGRestoreInterface_CheckResourcesReady_Call) RunAndReturn(run func(*contexts.Context) error) *MockCNPGRestoreInterface_CheckResourcesReady_Call {
	_c.Call.Return(run)
	return _c
}

// Configure provides a mock function with given fields: kubeClusterClient, namespace, clusterName, servingCertName, clientCertIssuerName, drVolName, fullRestoreName, backupFileRelPath, opts
func (_m *MockCNPGRestoreInterface) Configure(kubeClusterClient kubecluster.ClientInterface, namespace string, clusterName string, servingCertName string, clientCertIssuerName string, drVolName string, fullRestoreName string, backupFileRelPath string, opts CNPGRestoreOpts) {
	_m.Called(kubeClusterClient, namespace, clusterName, servingCertName, clientCertIssuerName, drVolName, fullRestoreName, backupFileRelPath, opts)
}

// MockCNPGRestoreInterface_Configure_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Configure'
type MockCNPGRestoreInterface_Configure_Call struct {
	*mock.Call
}

// Configure is a helper method to define mock.On call
//   - kubeClusterClient kubecluster.ClientInterface
//   - namespace string
//   - clusterName string
//   - servingCertName string
//   - clientCertIssuerName string
//   - drVolName string
//   - fullRestoreName string
//   - backupFileRelPath string
//   - opts CNPGRestoreOpts
func (_e *MockCNPGRestoreInterface_Expecter) Configure(kubeClusterClient interface{}, namespace interface{}, clusterName interface{}, servingCertName interface{}, clientCertIssuerName interface{}, drVolName interface{}, fullRestoreName interface{}, backupFileRelPath interface{}, opts interface{}) *MockCNPGRestoreInterface_Configure_Call {
	return &MockCNPGRestoreInterface_Configure_Call{Call: _e.mock.On("Configure", kubeClusterClient, namespace, clusterName, servingCertName, clientCertIssuerName, drVolName, fullRestoreName, backupFileRelPath, opts)}
}

func (_c *MockCNPGRestoreInterface_Configure_Call) Run(run func(kubeClusterClient kubecluster.ClientInterface, namespace string, clusterName string, servingCertName string, clientCertIssuerName string, drVolName string, fullRestoreName string, backupFileRelPath string, opts CNPGRestoreOpts)) *MockCNPGRestoreInterface_Configure_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(kubecluster.ClientInterface), args[1].(string), args[2].(string), args[3].(string), args[4].(string), args[5].(string), args[6].(string), args[7].(string), args[8].(CNPGRestoreOpts))
	})
	return _c
}

func (_c *MockCNPGRestoreInterface_Configure_Call) Return() *MockCNPGRestoreInterface_Configure_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockCNPGRestoreInterface_Configure_Call) RunAndReturn(run func(kubecluster.ClientInterface, string, string, string, string, string, string, string, CNPGRestoreOpts)) *MockCNPGRestoreInterface_Configure_Call {
	_c.Run(run)
	return _c
}

// Restore provides a mock function with given fields: ctx
func (_m *MockCNPGRestoreInterface) Restore(ctx *contexts.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for Restore")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*contexts.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockCNPGRestoreInterface_Restore_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Restore'
type MockCNPGRestoreInterface_Restore_Call struct {
	*mock.Call
}

// Restore is a helper method to define mock.On call
//   - ctx *contexts.Context
func (_e *MockCNPGRestoreInterface_Expecter) Restore(ctx interface{}) *MockCNPGRestoreInterface_Restore_Call {
	return &MockCNPGRestoreInterface_Restore_Call{Call: _e.mock.On("Restore", ctx)}
}

func (_c *MockCNPGRestoreInterface_Restore_Call) Run(run func(ctx *contexts.Context)) *MockCNPGRestoreInterface_Restore_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*contexts.Context))
	})
	return _c
}

func (_c *MockCNPGRestoreInterface_Restore_Call) Return(_a0 error) *MockCNPGRestoreInterface_Restore_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockCNPGRestoreInterface_Restore_Call) RunAndReturn(run func(*contexts.Context) error) *MockCNPGRestoreInterface_Restore_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockCNPGRestoreInterface creates a new instance of MockCNPGRestoreInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockCNPGRestoreInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockCNPGRestoreInterface {
	mock := &MockCNPGRestoreInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
