// Code generated by mockery v2.51.0. DO NOT EDIT.

package helpers

import mock "github.com/stretchr/testify/mock"

// MockmetaResource is an autogenerated mock type for the metaResource type
type MockmetaResource struct {
	mock.Mock
}

type MockmetaResource_Expecter struct {
	mock *mock.Mock
}

func (_m *MockmetaResource) EXPECT() *MockmetaResource_Expecter {
	return &MockmetaResource_Expecter{mock: &_m.Mock}
}

// GetName provides a mock function with no fields
func (_m *MockmetaResource) GetName() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetName")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockmetaResource_GetName_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetName'
type MockmetaResource_GetName_Call struct {
	*mock.Call
}

// GetName is a helper method to define mock.On call
func (_e *MockmetaResource_Expecter) GetName() *MockmetaResource_GetName_Call {
	return &MockmetaResource_GetName_Call{Call: _e.mock.On("GetName")}
}

func (_c *MockmetaResource_GetName_Call) Run(run func()) *MockmetaResource_GetName_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockmetaResource_GetName_Call) Return(_a0 string) *MockmetaResource_GetName_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockmetaResource_GetName_Call) RunAndReturn(run func() string) *MockmetaResource_GetName_Call {
	_c.Call.Return(run)
	return _c
}

// GetNamespace provides a mock function with no fields
func (_m *MockmetaResource) GetNamespace() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetNamespace")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockmetaResource_GetNamespace_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetNamespace'
type MockmetaResource_GetNamespace_Call struct {
	*mock.Call
}

// GetNamespace is a helper method to define mock.On call
func (_e *MockmetaResource_Expecter) GetNamespace() *MockmetaResource_GetNamespace_Call {
	return &MockmetaResource_GetNamespace_Call{Call: _e.mock.On("GetNamespace")}
}

func (_c *MockmetaResource_GetNamespace_Call) Run(run func()) *MockmetaResource_GetNamespace_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockmetaResource_GetNamespace_Call) Return(_a0 string) *MockmetaResource_GetNamespace_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockmetaResource_GetNamespace_Call) RunAndReturn(run func() string) *MockmetaResource_GetNamespace_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockmetaResource creates a new instance of MockmetaResource. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockmetaResource(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockmetaResource {
	mock := &MockmetaResource{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
