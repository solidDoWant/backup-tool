// Code generated by mockery v2.51.0. DO NOT EDIT.

package s3

import (
	aws "github.com/aws/aws-sdk-go/aws"
	mock "github.com/stretchr/testify/mock"
)

// MockCredentialsInterface is an autogenerated mock type for the CredentialsInterface type
type MockCredentialsInterface struct {
	mock.Mock
}

type MockCredentialsInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockCredentialsInterface) EXPECT() *MockCredentialsInterface_Expecter {
	return &MockCredentialsInterface_Expecter{mock: &_m.Mock}
}

// AWSConfig provides a mock function with no fields
func (_m *MockCredentialsInterface) AWSConfig() *aws.Config {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for AWSConfig")
	}

	var r0 *aws.Config
	if rf, ok := ret.Get(0).(func() *aws.Config); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*aws.Config)
		}
	}

	return r0
}

// MockCredentialsInterface_AWSConfig_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AWSConfig'
type MockCredentialsInterface_AWSConfig_Call struct {
	*mock.Call
}

// AWSConfig is a helper method to define mock.On call
func (_e *MockCredentialsInterface_Expecter) AWSConfig() *MockCredentialsInterface_AWSConfig_Call {
	return &MockCredentialsInterface_AWSConfig_Call{Call: _e.mock.On("AWSConfig")}
}

func (_c *MockCredentialsInterface_AWSConfig_Call) Run(run func()) *MockCredentialsInterface_AWSConfig_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockCredentialsInterface_AWSConfig_Call) Return(_a0 *aws.Config) *MockCredentialsInterface_AWSConfig_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockCredentialsInterface_AWSConfig_Call) RunAndReturn(run func() *aws.Config) *MockCredentialsInterface_AWSConfig_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockCredentialsInterface creates a new instance of MockCredentialsInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockCredentialsInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockCredentialsInterface {
	mock := &MockCredentialsInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
